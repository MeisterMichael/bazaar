

.container-fluid
	.row
		.col-xs-12
			%ul.breadcrumb
				%li
					%a{ href: subscription_admin_index_path }
						%i.fa.fa-angle-left
						Subscriptions

			.pull-right
				- if defined?(Bunyan)
					%a.btn.btn-default{ href: bazaar.timeline_subscription_admin_path( @subscription ) }
						View Timeline

			%h2
				%strong= @subscription.code
				%small= @subscription.created_at.to_fs( :short )
			- unless @subscription.subscription_offers.present?
				Plan:
				%a{ href: bazaar.edit_offer_admin_path( @subscription.offer ) }= @subscription.offer.title
				(
				%a{ href: '#', data: { toggle: :modal, target: '#edit_subscription_offer_modal' } } Edit
				)

	.row
		.col-xs-8
			.well.white-well
				%h4 Offers
				%table.table.table-light.table-bordered{ style: 'margin:0;' }
					%thead
						%th{ style: 'width: 3em;' } &nbsp;
						%th Title
						%th{ style: 'width: 6em;' } Quantity
						%th{ style: 'width: 6em;' } Next Interval
						%th{ style: 'width: 9em;' } Created
						%th{ style: 'width: 9em;' } Canceled
						%th{ style: 'width: 6em;' } Status
						%th{ style: 'width: 4em;' } &nbsp;
					%tbody
						- if @subscription.subscription_offers.blank?
							%tr
								%td{ colspan: 6 }
									\- No Offers Found -
						- @subscription.subscription_offers.order(id: :asc).each_with_index do |subscription_offer, index|
							%tr{ style: ( subscription_offer.active? ? '' : 'opacity: 0.7' ) }
								%td=(index + 1)
								%td
									%a{ href: bazaar.edit_offer_admin_path( subscription_offer.offer ) }= subscription_offer.offer.title
									%br
									%small
										code: #{subscription_offer.offer.code}
								%td= subscription_offer.quantity
								%td= subscription_offer.next_subscription_interval
								%td= current_user.to_local_tz(subscription_offer.created_at).to_fs( :short )
								%td
									- if subscription_offer.canceled_at.present?
										= current_user.to_local_tz(subscription_offer.canceled_at).to_fs( :short )
								%td= subscription_offer.status
								%td
									- if subscription_offer.active?
										%a{ href: '#', data: { toggle: :modal, target: "#edit_subscription_offer_#{subscription_offer.id}_modal" } } Edit
				.text-center{ style: 'margin-top: 0.5em;' }
					%a.btn.btn-default.btn-xs{ href: '#', data: { toggle: :modal, target: "#new_subscription_offer_modal" } } Add Offer

			.well.white-well
				%h4 Orders
				%table.table.table-light.table-bordered{ style: 'margin:0;' }
					%thead
						%th
							Code
						%th
							Created
						%th Items
						%th Status
						%th
							Total
					%tbody
						- if @orders.blank?
							%tr
								%td{ colspan: 5 }
									\- No Orders Found -
						- @orders.each do |order|
							= render 'bazaar/order_admin/table_row', order: order, args: { controls: false, customer: false }

			-#.well.white-well
				%h4 Transactions
				%table.table.table-light.table-bordered{ style: 'margin: 0;' }
					%thead
						%tr
							%th{ style: 'width: 10em' } Date
							%th{ style: 'width: 10em' } Type
							%th{ style: 'width: 10em' } Status
							%th{ style: 'width: 10em' } Gateway
							%th Reference
							%th.text-right{ style: 'width: 10em' } Amount
							%th{ style: 'width: 4em' } Currency
					%tbody
						- if @transactions.blank?
							%tr
								%td{ colspan: 7 }
									\- No Transactions Found -


						- @transactions.each do |transaction|
							%tr
								%td
									=current_user.to_local_tz(transaction.created_at).to_fs( :short )
								%td
									= transaction.transaction_type
								%td
									= transaction.status
								%td
									= transaction.provider
								%td
									= transaction.reference_code
								%td.text-right
									= number_to_currency (transaction.amount.to_f / 100)
								%td
									= transaction.currency
							- if transaction.message.present?
								%tr
									%td{ colspan: 6 }
										= transaction.message

			-# .well.white-well
				.row
					.col-xs-12.col-md-6
						%h4
							Custom Pricing
						%table.table.table-light.table-bordered{ style: 'margin: 0;' }
							%thead
								%tr
									%th{ style: 'width: 10em' } Start Interval
									%th.text-right
										Price

							%tbody
								- if @subscription.offer_prices.active.present?
									- @subscription.offer_prices.active.each do |offer_price|
										%tr
											%td
												=offer_price.start_interval
											%td.text-right
												=offer_price.price_formatted
								- else
									%tr
										%td{ colspan: 2 } - None -

					.col-xs-12.col-md-6
						%h4
							Custom Schedule
						%table.table.table-light.table-bordered{ style: 'margin: 0;' }
							%thead
								%tr
									%th{ style: 'width: 10em' } Start Interval
									%th.text-right
										Interval

							%tbody
								- if @subscription.offer_schedules.active.present?
									- @subscription.offer_schedules.active.each do |offer_schedule|
										%tr
											%td
												=offer_schedule.start_interval
											%td.text-right
												= pluralize offer_schedule.interval_value, offer_schedule.interval_unit
								- else
									%tr
										%td{ colspan: 2 } - None -

		.col-xs-4
			.well.white-well

				= form_for @subscription, url: subscription_admin_path( @subscription ) do |f|
					.form-group
						= f.label :status
						%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: "Determines if the subscription is renewing, and if not why it's not renewing." }
						= f.collection_select :status, Bazaar::Subscription.statuses, :first, humanize_first, {}, class: 'form-control'
					.form-group
						= f.label :next_charged_at, 'Next Charge'
						%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: 'The date and time that this subscription will next be charged.' }
						= f.text_field :next_charged_at, value: current_user.to_local_tz( @subscription.next_charged_at ), class: 'datetimepicker form-control'

					-# .form-group
						= f.label :quantity, 'Quantity'
						%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: 'The number of units of the subscribed offer that will be added to the next subscription renewal order.' }
						= f.number_field :quantity, class: 'form-control', min: 1


					%a.pull-right{ href: '#', data: { toggle: :modal, target: '#new_offer_schedule_modal' } } Customize
					.form-group
						= label_tag :next_renewal_interval, "Next Renewal Interval"
						%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: 'The amount of time, after the <strong>next</strong> subscription has been charged, that it will be charged again.' }
						.row{ style: 'margin-top: 0' }
							.col-md-6
								-# = f.number_field :billing_interval_value, class: 'form-control', min: 1
								.form-control.disabled{ disabled: :disabled }
									#{@subscription.interval_value_for_interval( @subscription.next_subscription_interval )}
							.col-md-6
								-# = f.select :billing_interval_unit, ['months', 'weeks', 'days'], {}, class: 'form-control', style: ''
								.form-control.disabled{ disabled: :disabled }
									#{@subscription.interval_unit_for_interval( @subscription.next_subscription_interval )}

					.form-group
						= f.submit 'Update', class: 'btn btn-primary'

			.well.white-well
				%h4 Next Renewal
				.form-group
					%label='Interval'
					.form-control.disabled{ disabled: :disabled }=@subscription.next_subscription_interval

				.form-group
					-# %a.pull-right{ href: '#', data: { toggle: :modal, target: '#new_offer_price_modal' } } Customize
					= label_tag :next_renewal_price, "Estimated Subtotal"
					%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: 'The total (before taxes, shipping and discounts) to be charged on the next subscription renewal order.' }
					.form-control{ disabled: :disabled }
						#{@subscription.estimated_subtotal_formatted}
				.row
					.col-xs-12.col-lg-6
						.form-group
							= label_tag :next_renewal_price, "Estimated Tax"
							.form-control{ disabled: :disabled }
								#{@subscription.estimated_tax_formatted}
					.col-xs-12.col-lg-6
						.form-group
							= label_tag :next_renewal_price, "Estimated Shipping"
							.form-control{ disabled: :disabled }
								#{@subscription.estimated_shipping_formatted}
				.form-group
					= label_tag :next_renewal_price, "Estimated Discount"
					.form-control{ disabled: :disabled }
						#{@subscription.estimated_discount_formatted}
				.form-group
					= label_tag :next_renewal_price, "Estimated Total"
					%i.fa.fa-question-circle{ data: { toggle: 'tooltip' }, title: 'The total (including taxes, shipping and discounts) to be charged on the next subscription renewal order.' }
					.form-control{ disabled: :disabled }
						#{@subscription.estimated_total_formatted}

			.well.white-well
				.pull-right
					%a{ href: swell_id.edit_user_admin_path( @subscription.user ) }
						Edit
				%h5
					Customer

				%div
					%a{ href: swell_id.edit_user_admin_path( @subscription.user ) }= @subscription.user.try(:full_name)
				%a{ href: swell_id.edit_user_admin_path( @subscription.user ) }= @subscription.user.try(:email)


			.well.white-well
				.pull-right
					%a{ href: '#', data: { toggle: :modal, target: '#change_payment_profile' } } Edit
				%h5
					Payment Info
				- if @subscription.properties['credit_card_ending_in']
					%div XXXX #{@subscription.properties['credit_card_ending_in']} (#{@subscription.properties['credit_card_brand']})
				- if @subscription.payment_profile_expires_at
					%div=@subscription.payment_profile_expires_at.strftime('%m/%Y')
				%hr


				.pull-right
					%a{ href: '#', data: { toggle: :modal, target: '#update_discount_modal' } } Edit
				%h5
					Discount
				%div
					- if @subscription.discount
						= @subscription.discount.code || @subscription.discount.title
					- else
						None


				%hr
				.pull-right
					%a{ href: '#', data: { toggle: :modal, target: '#billing_user_address_modal' } } Edit
				%h5
					Billing Address
				= render 'address_section', geo_address: @subscription.billing_address, user_address: @subscription.billing_user_address, args: {}

			.well.white-well
				.pull-right
					%a{ href: '#', data: { toggle: :modal, target: '#shipping_user_address_modal' } } Edit
				%h5
					Shipping Address
				= render 'address_section', geo_address: @subscription.shipping_address, user_address: @subscription.shipping_user_address, args: {}


				%hr

				.pull-right
					%a{ href: bazaar.edit_shipping_carrier_service_subscription_admin_path( @subscription ) } Edit
				%h5 Shipping Method
				- if @subscription.shipping_carrier_service.present?
					%div= @subscription.shipping_carrier_service.shipping_option.try(:name) || @subscription.shipping_carrier_service.name
				- else
					%div Default

= render 'bazaar/subscription_admin/edit_address_modal', args: { title: 'Billing Address', attribute: 'billing_user_address' }, countries: get_billing_countries, states: get_billing_states( @subscription.billing_user_address.geo_country.id )
= render 'bazaar/subscription_admin/edit_address_modal', args: { title: 'Shipping Address', attribute: 'shipping_user_address' }, countries: get_shipping_countries, states: get_shipping_states( @subscription.shipping_user_address.geo_country.id )
= render 'bazaar/subscription_admin/change_payment_profile_modal', args: {}
= render 'bazaar/subscription_admin/update_discount_modal', args: {}
= render 'bazaar/offer_price_admin/new_modal', parent_obj: @subscription, args: { start_interval: @subscription.next_subscription_interval, price_as_money: @subscription.price_as_money_for_interval( @subscription.next_subscription_interval ), replace_mode: 'duplicate_start_intervals' }
= render 'bazaar/offer_schedule_admin/new_modal', parent_obj: @subscription, args: { start_interval: @subscription.next_subscription_interval, interval_value: @subscription.interval_value_for_interval( @subscription.next_subscription_interval ), interval_unit: @subscription.interval_unit_for_interval( @subscription.next_subscription_interval ), replace_mode: 'duplicate_start_intervals' }
= render 'bazaar/subscription_admin/edit_offer_modal', args: {}
- @subscription.subscription_offers.each do |subscription_offer|
	= render 'bazaar/subscription_offer_admin/edit_modal', subscription_offer: subscription_offer, args: {}
= render 'bazaar/subscription_offer_admin/new_modal', subscription: @subscription, args: {}
